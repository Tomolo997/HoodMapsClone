{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","app.js"],"names":["circleZoomMax","circleZoomMin","map","loadMap","coords","L","minZoom","maxZoom","setView","tileLayer","attribution","addTo","init","getData","city","fetch","response","data","json","searced","inputSearch","document","querySelector","searchCityButton","addEventListener","value","console","log","latitude","longitude","canvas","mapP","drawButton","undrawButton","style","zIndex","addTextBoolean","lat","lng","position","positionOnMap","isDrawing","ctx","getContext","x","y","yea","getPixelBounds","positionX","positionY","getMousePosition","e","xP","clientX","yP","clientY","changeColor","querySelectorAll","color","strokeStyle","forEach","el","target","dataset","mouseDraw","lineCap","zoom","getZoom","desiredRadius","containerPointToLatLng","circle","radius","opacity","fillOpacity","latLngToLayerPoint","xCoords","yCoords","startDrawing","stopDrawing"],"mappings":";AAAA;ACEA,ADDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA,ADSA,ICTIA,aAAa,GAAG,EAApB;AACA,ADSA,ICTIC,aAAa,GAAG,EAApB;AAEA,ADQA,ICRIC,GAAJ;ADSA;ACRA,ADSA,SCTSC,OAAT,CAAiBC,MAAjB,EAAyB;AACvBF,ADSF,ECTEA,GAAG,GAAGG,CAAC,CAACH,GAAF,CAAM,KAAN,EAAa;AACjBI,ADSJ,ICTIA,OAAO,EAAEL,aADQ;AAEjBM,ADSJ,ICTIA,OAAO,EAAEP;AAFQ,ADYrB,GCZQ,EAGHQ,OAHG,CAGKJ,MAHL,EAGa,EAHb,CAAN;AAKAC,ADQF,ECREA,CAAC,CAACI,SAAF,CAAY,oDAAZ,EAAkE;AAChEC,ADQJ,ICRIA,WAAW,EACT;AAF8D,ADUpE,GCVE,EAGGC,KAHH,CAGST,GAHT;AAID,ADOD;AACA;ACPA,ADQA,SCRSU,IAAT,GAAgB;AACdT,ADQF,ECREA,OAAO,CAAC,CAAC,OAAD,EAAU,OAAV,CAAD,CAAP;AACD,ADQD;AACA;ACPA,ADQA,ICRMU,OAAO;AAAA,ADSb,8ECTgB,iBAAgBC,IAAhB;AAAA,ADUhB;ACVgB,ADWhB;ACXgB,ADYhB;ACZgB,ADahB;ACbgB,ADchB;ACdgB,ADehB;ACfgB,ADgBhB;AChBgB,ADiBhB,mBCf2BC,KAAK,qGACmED,IADnE,EAFhB;ADkBhB;AClBgB,ADmBhB;ACjBUE,ADkBV,YClBUA,QAFM;AAKNC,ADgBV,YChBUA,IALM,GAKCD,QAAQ,CAACE,IAAT,EALD;AAAA,ADsBhB,6CChBWD,IANK;ADuBhB;ACvBgB,ADwBhB;ACxBgB,ADyBhB;ACzBgB,AD0BhB;AACA;AC3BgB,AD4BhB;AC5BgB,AD6BhB;AC7BgB,AD8BhB;AC9BgB,AD+BhB;AC/BgB,ADgChB;AChCgB,ADiChB;ACjCgB,ADkChB,GClCa;ADmCb;ACnCa,ADoCb,kBCpCMJ,OAAO;AAAA,ADqCb;ACrCa,ADsCb;ACtCa,ADuCb,GCvCA;ADwCA;AC9BAD,AD+BA,IC/BI;AACJ,AD+BA,IC/BIO,OAAO,GAAG,KAAd;AACA,AD+BA,IC/BMC,W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A,OAAO,CAACC,GAAR,CAAYa,aAAa,CAACD,QAA1B;AACD,AD6CH,GC5HE;AD6HF;AC5CE,AD6CF,WC7CWsC,YAAT,CAAsB1B,CAAtB,EAAyB;AACvBV,AD6CJ,IC7CIA,SAAS,GAAG,IAAZ;AACAS,AD6CJ,IC7CIA,gBAAgB,CAACC,CAAD,CAAhB;AACD,AD6CH;AACA;AC7CE,AD8CF,WC9CW2B,WAAT,GAAuB;AACrBrC,AD8CJ,IC9CIA,SAAS,GAAG,KAAZ;AACD,AD8CH;AACA;AC9CEX,AD+CF,EC/CEA,MAAM,CAACN,gBAAP,CAAwB,WAAxB,EAAqCqD,YAArC;AACA/C,AD+CF,EC/CEA,MAAM,CAACN,gBAAP,CAAwB,WAAxB,EAAqCwC,SAArC;AACAlC,AD+CF,EC/CEA,MAAM,CAACN,gBAAP,CAAwB,SAAxB,EAAmCsD,WAAnC;AACD,AD+CD,CCxKA,GA2HA;AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AC7CA,AD8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","let circleZoomMax = 18;\r\nlet circleZoomMin = 10;\r\nimport regeneratorRuntime from 'regenerator-runtime';\r\nlet map;\r\nfunction loadMap(coords) {\r\n  map = L.map('map', {\r\n    minZoom: circleZoomMin,\r\n    maxZoom: circleZoomMax,\r\n  }).setView(coords, 15);\r\n\r\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    attribution:\r\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n  }).addTo(map);\r\n}\r\nfunction init() {\r\n  loadMap([46.5547, 15.6459]);\r\n}\r\n\r\nconst getData = async function (city) {\r\n  try {\r\n    const response = await fetch(\r\n      `http://api.positionstack.com/v1/forward?access_key=32695ca2d7bda0ff957097a146fe53bc&query=${city}`\r\n    );\r\n    const data = response.json();\r\n    return data;\r\n  } catch (error) {}\r\n};\r\n\r\ninit();\r\nlet searced = false;\r\nconst inputSearch = document.querySelector('.citySearch-input');\r\nconst searchCityButton = document.querySelector('.btn-citySearch');\r\nsearchCityButton.addEventListener('click', async function () {\r\n  const data = await getData(inputSearch.value);\r\n  console.log(data);\r\n  searced = true;\r\n  map.setView([data.data[0].latitude, data.data[0].longitude], 15);\r\n  searced != true;\r\n  inputSearch.value = '';\r\n});\r\n\r\nconst canvas = document.querySelector('#myCanvas');\r\nconst mapP = document.querySelector('#map');\r\nconst drawButton = document.querySelector('.draw');\r\nconst undrawButton = document.querySelector('.undraw');\r\nundrawButton.addEventListener('click', function () {\r\n  canvas.style.zIndex = 1;\r\n  mapP.style.zIndex = 1;\r\n  addTextBoolean = false;\r\n});\r\n\r\nlet addTextBoolean = false;\r\n\r\nlet lat, lng;\r\nlet position;\r\nlet positionOnMap;\r\nlet isDrawing = false;\r\nlet ctx = canvas.getContext('2d');\r\ndrawButton.addEventListener('click', function () {\r\n  canvas.style.zIndex = 2;\r\n  mapP.style.zIndex = -1;\r\n\r\n  //getMouse position\r\n\r\n  position = {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n  const yea = map.getPixelBounds();\r\n  console.log(yea);\r\n  positionOnMap = {\r\n    position: [{ positionX: 0, positionY: 0 }],\r\n  };\r\n  const getMousePosition = function (e) {\r\n    let xP = e.clientX;\r\n    let yP = e.clientY;\r\n    position.x = xP;\r\n    position.y = yP;\r\n  };\r\n  const changeColor = document.querySelectorAll('.changeColor');\r\n  let color = 'red';\r\n  ctx.strokeStyle = 'red';\r\n  changeColor.forEach((el) =>\r\n    el.addEventListener('click', function (e) {\r\n      ctx.strokeStyle = e.target.dataset.color;\r\n      color = e.target.dataset.color;\r\n    })\r\n  );\r\n  const mouseDraw = function (e) {\r\n    if (!isDrawing) return;\r\n\r\n    ctx.lineCap = 'round';\r\n\r\n    color = ctx.strokeStyle;\r\n    /*\r\n  blueColor.addEventListener(\"click\", function (e) {\r\n    console.log(e.target.dataset.color);\r\n    ctx.strokeStyle = e.target.dataset.color;\r\n  }),\r\n  */\r\n    //ctx.moveTo(position.x, position.y);\r\n    getMousePosition(e);\r\n    //ctx.lineTo(position.x, position.y);\r\n    let zoom = map.getZoom();\r\n    let desiredRadius;\r\n\r\n    switch (zoom) {\r\n      case 18:\r\n        desiredRadius = 20;\r\n\r\n        break;\r\n      case 17:\r\n        desiredRadius = 40;\r\n\r\n        break;\r\n      case 16:\r\n        desiredRadius = 60;\r\n\r\n        break;\r\n      case 15:\r\n        desiredRadius = 80;\r\n      case 14:\r\n        desiredRadius = 100;\r\n\r\n        break;\r\n      case 13:\r\n        desiredRadius = 200;\r\n\r\n        break;\r\n      case 12:\r\n        desiredRadius = 400;\r\n\r\n        break;\r\n      case 11:\r\n        desiredRadius = 600;\r\n\r\n        break;\r\n      case 10:\r\n        desiredRadius = 1200;\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    let { lat, lng } = map.containerPointToLatLng([position.x, position.y]);\r\n    positionOnMap.position.positionX = lat;\r\n    positionOnMap.position.positionY = lng;\r\n\r\n    L.circle(\r\n      [positionOnMap.position.positionX, positionOnMap.position.positionY],\r\n      {\r\n        color: color,\r\n        radius: desiredRadius,\r\n        opacity: 0.5,\r\n        fillOpacity: 1,\r\n      }\r\n    ).addTo(map);\r\n\r\n    //console.log(position);\r\n    //console.log(positionOnMap);\r\n    let yea = map.latLngToLayerPoint([lat, lng]);\r\n    let xCoords = yea.x;\r\n    let yCoords = yea.y;\r\n    console.log(position);\r\n    console.log(positionOnMap.position);\r\n  };\r\n\r\n  function startDrawing(e) {\r\n    isDrawing = true;\r\n    getMousePosition(e);\r\n  }\r\n  function stopDrawing() {\r\n    isDrawing = false;\r\n  }\r\n  canvas.addEventListener('mousedown', startDrawing);\r\n  canvas.addEventListener('mousemove', mouseDraw);\r\n  canvas.addEventListener('mouseup', stopDrawing);\r\n});\r\n\r\n//add a text\r\n/*\r\nconst addText = document.querySelector('.text');\r\naddText.addEventListener('click', function (e) {\r\n  addTextBoolean = true;\r\n  if (addTextBoolean) {\r\n    map.on('click', function (e) {\r\n      console.log(e.latlng);\r\n      let latlng = [e.latlng.lat - 0.0015, e.latlng.lng];\r\n      let popup = L.popup({\r\n        maxWidth: 250,\r\n        minWidth: 100,\r\n        autoClose: false,\r\n        closeOnClick: false,\r\n      })\r\n        .setContent(\r\n          `<div class=\"popup\"><span class=\"span-yea\"><span>\r\n          <input class='input'><button class='btn-yea'>Submit</button><button class='btn-close'>close</button></div>`\r\n        )\r\n        .setLatLng(latlng)\r\n        .openOn(map);\r\n      const buttonClose = document.querySelectorAll('.btn-close');\r\n      const inputPopUp = document.querySelectorAll('.input');\r\n      const addSpan = document.querySelectorAll('.span-yea');\r\n      const yeaSubmit = document.querySelectorAll('.btn-yea');\r\n\r\n      buttonClose.forEach((el) =>\r\n        el.addEventListener('click', function (e) {\r\n          popup.setContent('');\r\n          map.removeLayer(popup);\r\n        })\r\n      );\r\n      const leafLetPopUp = document.querySelectorAll('.leaflet-popup');\r\n      const closeButton = document.querySelector('.leaflet-popup-close-button');\r\n      leafLetPopUp.forEach((el) =>\r\n        el.addEventListener('click', function () {\r\n          closeButton.style.display = 'block';\r\n        })\r\n      );\r\n      yeaSubmit.forEach((el) =>\r\n        el.addEventListener('click', function (e) {\r\n          console.log(e.target.parentElement.firstChild.nextSibling);\r\n          e.target.parentElement.textContent =\r\n            e.target.parentElement.firstChild.nextSibling.value;\r\n        })\r\n      );\r\n    });\r\n  }\r\n  addTextBoolean = false;\r\n});\r\n\r\nconsole.log(innerHeight);\r\nconsole.log(innerWidth);\r\n\r\n//when i hover the pop up the close button shows\r\n*/\r\n"]}